on:
  pull_request:
    branches: [main]

name: CI

env:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN: stable
  TOOLCHAIN_PROFILE: minimal

jobs:
  lints:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Install ALSA dev
        run: |
          sudo apt-get update
          sudo apt-get install libasound2-dev
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: ${{ env.TOOLCHAIN_PROFILE }}
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          target: aarch64-linux-android
          override: true
          components: rustfmt, clippy
      - name: Install Android NDK
        run: |
          sudo apt-get install curl unzip
          curl https://dl.google.com/android/repository/android-ndk-r22b-linux-x86_64.zip > /tmp/ndk.zip
          sudo unzip -d /ndk /tmp/ndk.zip
          echo /ndk/android-ndk-r22b/toolchains/llvm/prebuilt/linux-x86_64/bin >> $GITHUB_PATH
      - name: Cache
        uses: Swatinem/rust-cache@v1
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --tests -- -D warnings
      - name: Run cargo clippy (android)
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --target aarch64-linux-android

  spellcheck:
    name: CSpell
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: streetsidesoftware/cspell-action@v2
        with:
          files: |
            "**/*.md"

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Install ALSA dev
        run: |
          sudo apt-get update
          sudo apt-get install libasound2-dev
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: ${{ env.TOOLCHAIN_PROFILE }}
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
      - name: Cache
        uses: Swatinem/rust-cache@v1
      - name: Run cargo test --no-run
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: '--no-run'
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        env:
          RUST_TEST_THREADS: 1
        with:
          command: test
          args: '-p hotham --lib'
